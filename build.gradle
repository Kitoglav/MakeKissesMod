plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version '1.10-SNAPSHOT'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}
loom {
    splitEnvironmentSourceSets()

    mods {
        "makekisses" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}
repositories {
    maven { url 'https://maven.fabricmc.net' }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation fabricApi.module("fabric-api-base", project.fabric_version)
    modImplementation fabricApi.module("fabric-key-binding-api-v1", project.fabric_version)
    modImplementation fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version)
}

processResources {
    inputs.property "version", project.version

    filesMatching('fabric.mod.json') {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}